<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.12" timelimit="5" steplimit="0" memlimit="4000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="4000"/>
<prover id="2" name="Alt-Ergo" version="2.4.1" timelimit="5" steplimit="0" memlimit="4000"/>
<prover id="3" name="Eprover" version="2.6" timelimit="5" steplimit="0" memlimit="4000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="fracts.mlw"/>
<theory name="Top" proved="true">
 <goal name="add_is_closed" proved="true">
 <proof prover="1" timelimit="15"><result status="valid" time="0.02" steps="9286"/></proof>
 </goal>
 <goal name="mul_is_closed" proved="true">
 <proof prover="1" timelimit="15"><result status="valid" time="0.02" steps="9272"/></proof>
 </goal>
 <goal name="inv_is_closed" proved="true">
 <proof prover="1" timelimit="15"><result status="valid" time="0.01" steps="4531"/></proof>
 </goal>
 <goal name="assoc_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="assoc_add.0" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="4707"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="commut_add" proved="true">
 <proof prover="1" timelimit="15"><result status="valid" time="0.01" steps="4555"/></proof>
 </goal>
 <goal name="assoc_mul" proved="true">
 <proof prover="1" timelimit="15"><result status="valid" time="0.01" steps="4649"/></proof>
 </goal>
 <goal name="commut_mul" proved="true">
 <proof prover="1" timelimit="15"><result status="valid" time="0.01" steps="4541"/></proof>
 </goal>
 <goal name="zero_is_identity" proved="true">
 <proof prover="1" timelimit="15"><result status="valid" time="0.01" steps="6453"/></proof>
 </goal>
 <goal name="one_is_identity" proved="true">
 <proof prover="1" timelimit="15"><result status="valid" time="0.01" steps="6439"/></proof>
 </goal>
 <goal name="equiv_helper&#39;vc" expl="VC for equiv_helper" proved="true">
 <proof prover="1"><result status="valid" time="0.08" steps="31504"/></proof>
 </goal>
 <goal name="equiv_helper_2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="equiv_helper_2.0" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="4658"/></proof>
  </goal>
  <goal name="equiv_helper_2.1" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="30249"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="equivalence_relation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="equivalence_relation.0" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="4692"/></proof>
  </goal>
  <goal name="equivalence_relation.1" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="4746"/></proof>
  </goal>
  <goal name="equivalence_relation.2" proved="true">
  <proof prover="0" timelimit="15"><result status="valid" time="0.01" steps="12452"/></proof>
  </goal>
  <goal name="equivalence_relation.3" proved="true">
  <transf name="compute_in_goal" proved="true" >
   <goal name="equivalence_relation.3.0" proved="true">
   <proof prover="0" timelimit="15"><result status="valid" time="0.01" steps="68495"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="zero_has_many_reprs" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="4734"/></proof>
 </goal>
 <goal name="mul_has_inverse" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="4783"/></proof>
 </goal>
 <goal name="distributivity" proved="true">
 <proof prover="1" timelimit="15"><result status="valid" time="0.01" steps="5035"/></proof>
 </goal>
 <goal name="strict_order" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="strict_order.0" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="6177"/></proof>
  </goal>
  <goal name="strict_order.1" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="4934"/></proof>
  </goal>
  <goal name="strict_order.2" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="108342"/></proof>
  </goal>
  <goal name="strict_order.3" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="4927"/></proof>
  </goal>
  <goal name="strict_order.4" proved="true">
  <proof prover="1"><result status="valid" time="0.35" steps="106270"/></proof>
  </goal>
  <goal name="strict_order.5" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="4934"/></proof>
  </goal>
  <goal name="strict_order.6" proved="true">
  <proof prover="1" timelimit="15"><result status="valid" time="0.76" steps="181690"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="nonstrict_order" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="nonstrict_order.0" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="4694"/></proof>
  </goal>
  <goal name="nonstrict_order.1" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="6202"/></proof>
  </goal>
  <goal name="nonstrict_order.2" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="4871"/></proof>
  </goal>
  <goal name="nonstrict_order.3" proved="true">
  <proof prover="1"><result status="valid" time="0.48" steps="114449"/></proof>
  </goal>
  <goal name="nonstrict_order.4" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="4864"/></proof>
  </goal>
  <goal name="nonstrict_order.5" proved="true">
  <proof prover="1"><result status="valid" time="0.73" steps="118811"/></proof>
  </goal>
  <goal name="nonstrict_order.6" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="4871"/></proof>
  </goal>
  <goal name="nonstrict_order.7" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="140580"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="transitivity_with_inf" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="transitivity_with_inf.0" proved="true">
  <proof prover="1"><result status="valid" time="1.36" steps="304852"/></proof>
  </goal>
  <goal name="transitivity_with_inf.1" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="551493"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_is_closed_inf_with_fin" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="12175"/></proof>
 </goal>
 <goal name="mul_is_closed_inf_without_zero" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="13057"/></proof>
 </goal>
 <goal name="add_not_closed" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="12207"/></proof>
 </goal>
 <goal name="division_fact&#39;vc" expl="VC for division_fact" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="division_fact&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="21227"/></proof>
  </goal>
  <goal name="division_fact&#39;vc.1" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="7.40"/></proof>
  </goal>
  <goal name="division_fact&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="375"/></proof>
  </goal>
  <goal name="division_fact&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="55212"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="floor_transp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="floor_transp.0" proved="true">
  <proof prover="1"><result status="valid" time="0.95" steps="242951"/></proof>
  </goal>
  <goal name="floor_transp.1" proved="true">
  <proof prover="1"><result status="valid" time="0.30" steps="105077"/></proof>
  </goal>
  <goal name="floor_transp.2" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="110569"/></proof>
  </goal>
  <goal name="floor_transp.3" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="553811"/></proof>
  </goal>
  <goal name="floor_transp.4" proved="true">
  <proof prover="1"><result status="valid" time="3.31" steps="922184"/></proof>
  </goal>
  <goal name="floor_transp.5" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="8923"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_cvt_ord" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="6159"/></proof>
 </goal>
 <goal name="int_cvt" proved="true">
 <proof prover="1"><result status="valid" time="0.19" steps="63588"/></proof>
 </goal>
 <goal name="ceil_floor_eq" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="7862"/></proof>
 </goal>
 <goal name="ord_ceil_floor" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ord_ceil_floor.0" proved="true">
  <proof prover="1"><result status="valid" time="0.33" steps="91397"/></proof>
  </goal>
  <goal name="ord_ceil_floor.1" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="49143"/></proof>
  </goal>
  <goal name="ord_ceil_floor.2" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="134277"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="is_whole_sanity" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="is_whole_sanity.0" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="19214"/></proof>
  </goal>
  <goal name="is_whole_sanity.1" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="6736"/></proof>
  </goal>
  <goal name="is_whole_sanity.2" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="15560"/></proof>
  </goal>
  <goal name="is_whole_sanity.3" proved="true">
  <proof prover="1"><result status="valid" time="1.28" steps="184412"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="eqv_whole" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="eqv_whole.0" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="71"/></proof>
  </goal>
  <goal name="eqv_whole.1" proved="true">
  <proof prover="2" timelimit="50"><result status="valid" time="0.47" steps="15281"/></proof>
  </goal>
  <goal name="eqv_whole.2" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="50749"/></proof>
  </goal>
  <goal name="eqv_whole.3" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="41982"/></proof>
  </goal>
  <goal name="eqv_whole.4" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="16984"/></proof>
  </goal>
  <goal name="eqv_whole.5" proved="true">
  <proof prover="3" timelimit="50"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ceil_floor_whole" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ceil_floor_whole.0" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="24220"/></proof>
  </goal>
  <goal name="ceil_floor_whole.1" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="148"/></proof>
  </goal>
  <goal name="ceil_floor_whole.2" proved="true">
  <proof prover="1"><result status="valid" time="1.95" steps="305932"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ceil_floor_ne" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ceil_floor_ne.0" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="16256"/></proof>
  </goal>
  <goal name="ceil_floor_ne.1" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="49587"/></proof>
  </goal>
  <goal name="ceil_floor_ne.2" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="58220"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ceil_transp" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="142525"/></proof>
 </goal>
</theory>
</file>
</why3session>
